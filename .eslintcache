[{"E:\\React-Projects\\bank-balance\\src\\index.js":"1","E:\\React-Projects\\bank-balance\\src\\reportWebVitals.js":"2","E:\\React-Projects\\bank-balance\\src\\App.js":"3","E:\\React-Projects\\bank-balance\\src\\components\\layout\\Navbar.js":"4","E:\\React-Projects\\bank-balance\\src\\components\\layout\\Dashboard.js":"5","E:\\React-Projects\\bank-balance\\src\\components\\clients\\Client.js":"6","E:\\React-Projects\\bank-balance\\src\\components\\layout\\Sidebar.js":"7","E:\\React-Projects\\bank-balance\\src\\store.js":"8","E:\\React-Projects\\bank-balance\\src\\components\\clients\\AddClient.js":"9","E:\\React-Projects\\bank-balance\\src\\components\\clients\\ClientDetails.js":"10","E:\\React-Projects\\bank-balance\\src\\components\\clients\\EditClient.js":"11","E:\\React-Projects\\bank-balance\\src\\components\\auth\\Login.js":"12","E:\\React-Projects\\bank-balance\\src\\components\\helpers\\Authenticated.js":"13","E:\\React-Projects\\bank-balance\\src\\components\\layout\\Loading.js":"14"},{"size":496,"mtime":1610628930346,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1893,"mtime":1610861044151,"results":"18","hashOfConfig":"16"},{"size":2019,"mtime":1610864975350,"results":"19","hashOfConfig":"16"},{"size":337,"mtime":1610528860303,"results":"20","hashOfConfig":"16"},{"size":2754,"mtime":1610865178228,"results":"21","hashOfConfig":"16"},{"size":271,"mtime":1610606322901,"results":"22","hashOfConfig":"16"},{"size":1239,"mtime":1610816511494,"results":"23","hashOfConfig":"16"},{"size":3358,"mtime":1610863723801,"results":"24","hashOfConfig":"16"},{"size":3185,"mtime":1610783786409,"results":"25","hashOfConfig":"16"},{"size":2804,"mtime":1610864095833,"results":"26","hashOfConfig":"16"},{"size":1985,"mtime":1610862710923,"results":"27","hashOfConfig":"16"},{"size":1353,"mtime":1610860558766,"results":"28","hashOfConfig":"16"},{"size":219,"mtime":1610860302091,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1f5k8ww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\React-Projects\\bank-balance\\src\\index.js",[],["62","63"],"E:\\React-Projects\\bank-balance\\src\\reportWebVitals.js",[],"E:\\React-Projects\\bank-balance\\src\\App.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\layout\\Navbar.js",["64"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport Bank from \"./bank.png\";\r\n\r\nclass Navbar extends React.Component {\r\n  state = {\r\n    isAuthenticated: false,\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { auth } = props;\r\n    console.log(auth);\r\n\r\n    if (auth.uid) {\r\n      return { isAuthenticated: true };\r\n    } else {\r\n      return { isAuthenticated: false };\r\n    }\r\n  }\r\n\r\n  onLogoutClick = () => {\r\n    const { firebase } = this.props;\r\n\r\n    firebase.logout();\r\n  };\r\n  render() {\r\n    const { isAuthenticated } = this.state;\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <img\r\n              src={Bank}\r\n              alt=\"Bank\"\r\n              style={{ width: \"20px\", height: \"20px\" }}\r\n            />\r\n            Balance Check\r\n          </Link>\r\n\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              {isAuthenticated ? (\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                    Dashboard <span className=\"sr-only\">(current)</span>\r\n                  </Link>\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              {isAuthenticated ? (\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" onClick={this.onLogoutClick}>\r\n                    Logout <span className=\"sr-only\">(current)</span>\r\n                  </a>\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect((state, props) => ({\r\n    auth: state.firebase.auth,\r\n  }))\r\n)(Navbar);\r\n","E:\\React-Projects\\bank-balance\\src\\components\\layout\\Dashboard.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\clients\\Client.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\layout\\Sidebar.js",[],"E:\\React-Projects\\bank-balance\\src\\store.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\clients\\AddClient.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\clients\\ClientDetails.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\clients\\EditClient.js",[],"E:\\React-Projects\\bank-balance\\src\\components\\auth\\Login.js",["65","66"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    firebase\r\n\r\n      .login({\r\n        email,\r\n        password,\r\n      })\r\n      .catch((err) => {\r\n        alert(\"wrong email or password\");\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"card my-5  \">\r\n          <div className=\"card-header\">\r\n            <h3>Login</h3>\r\n          </div>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group my-3\">\r\n              <label htmlFor=\"email\">Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                aria-describedby=\"emailHelp\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                onChange={this.onChange}\r\n                value={this.state.email}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={this.onChange}\r\n                value={this.state.passwword}\r\n              />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default firebaseConnect()(Login);\r\n","E:\\React-Projects\\bank-balance\\src\\components\\helpers\\Authenticated.js",["67"],"import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport Loading from \"../layout/Loading\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\nconst browserHistory = createHistory();\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  AuthenticatingComponent: Loading,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty,\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  AuthenticatingComponent: Loading,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty,\r\n});\r\n","E:\\React-Projects\\bank-balance\\src\\components\\layout\\Loading.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":57,"column":19,"nodeType":"74","endLine":57,"endColumn":72},{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":17},{"ruleId":"75","severity":1,"message":"80","line":7,"column":7,"nodeType":"77","messageId":"78","endLine":7,"endColumn":21},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'browserHistory' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]